---
import type { CollectionEntry } from "astro:content";
import Gravatar from "../components/Gravatar.astro";
import Layout from "./Layout.astro";

type Props = CollectionEntry<"blog">["data"];
import { getCollection } from "astro:content";

const authorsCollection = await getCollection("author");
const authors = Object.fromEntries(
  authorsCollection.map((author) => [
    author.id.replace(/\.[^.]*$/, ""),
    author.data,
  ]),
);

const {
  title,
  description,
  tags,
  date: _date,
  authors: _authors,
} = Astro.props;

const date: Date = new Date(_date);
---

<Layout title={title}>
  {
    (() => {
      if (!_authors || _authors.length === 0) return null;

      const firstAuthorWithMastodon = _authors
        .map((authorId) => authors[authorId])
        .find((author) => author?.socials?.mastodon);

      return firstAuthorWithMastodon?.socials?.mastodon ? (
        <meta
          name="fediverse:creator"
          content={firstAuthorWithMastodon.socials.mastodon}
          slot="head"
        />
      ) : null;
    })()
  }

  <article class="mx-auto max-w-4xl px-4 py-8">
    <header class="mb-8">
      <div
        class="text-base-content/60 flex flex-wrap items-center gap-4 text-sm"
      >
        <time class="flex items-center gap-1" datetime={date.toISOString()}>
          {
            date.toLocaleDateString("en-AU", {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          }
        </time>
      </div>
      <h1 class="text-base-content mb-4 text-4xl font-bold">{title}</h1>
      <p class="text-base-content/70 mb-6 text-lg">{description}</p>

      <div class="space-y-4">
        <div class="flex flex-wrap items-center gap-4">
          {
            _authors?.map((authorId) => {
              const author = authors[authorId];
              if (!author) return null;

              return (
                <a class="flex items-center gap-2" href={`/author/${authorId}`}>
                  <div class="avatar">
                    <div class="w-10 rounded-full">
                      <Gravatar
                        email={author.email}
                        alt={`${author.display_name}'s avatar`}
                      />
                    </div>
                  </div>
                  <span class="text-base-content font-medium">
                    {author.display_name}
                  </span>
                </a>
              );
            })
          }
        </div>

        {
          tags && tags.length > 0 && (
            <div class="flex flex-wrap gap-2">
              {tags.map((tag: string) => (
                <span class="badge badge-secondary badge-sm">{tag}</span>
              ))}
            </div>
          )
        }
      </div>
    </header>

    <div class="prose prose-lg max-w-none">
      <slot />
    </div>
  </article>
</Layout>
